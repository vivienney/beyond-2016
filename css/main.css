/*! normalize.css v3.0.2 | MIT License | git.io/normalize */img,legend{border:0}.btn,.news-signup-form__email:focus{box-shadow:4px 4px 0 #FFA397}.btn,.news-signup-form__email{outline:0;transition:all .2s ease-in-out}.btn,footer{text-align:center}@font-face{font-family:Inconsolata;font-style:normal;font-weight:400;src:local('Inconsolata'),url(https://fonts.gstatic.com/s/inconsolata/v12/BjAYBlHtW3CJxDcjzrnZCJ0EAVxt0G0biEntp43Qt6E.ttf) format('truetype')}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%}body{margin:0}article,aside,details,figcaption,figure,footer,header,hgroup,main,menu,nav,section,summary{display:block}audio,canvas,progress,video{display:inline-block;vertical-align:baseline}audio:not([controls]){display:none;height:0}[hidden],template{display:none}a{background-color:transparent;text-decoration:none}a:active,a:hover{outline:0}abbr[title]{border-bottom:1px dotted}b,optgroup,strong{font-weight:700}dfn{font-style:italic}h1{font-size:2em;margin:.67em 0}mark{background:#ff0;color:#000}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline}sup{top:-.5em}sub{bottom:-.25em}svg:not(:root){overflow:hidden}figure{margin:1em 40px}hr{box-sizing:content-box;height:0}pre,textarea{overflow:auto}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}button,input,optgroup,select,textarea{color:inherit;font:inherit;margin:0}.event-info__last-year,.event-info__year,.news-signup-form__email{font-family:Consolas,Inconsolata,monospace}button{overflow:visible}button,select{text-transform:none}button,html input[type=button],input[type=reset],input[type=submit]{-webkit-appearance:button;cursor:pointer}button[disabled],html input[disabled]{cursor:default}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0}input{line-height:normal}input[type=checkbox],input[type=radio]{box-sizing:border-box;padding:0}input[type=number]::-webkit-inner-spin-button,input[type=number]::-webkit-outer-spin-button{height:auto}input[type=search]{-webkit-appearance:textfield;box-sizing:content-box}input[type=search]::-webkit-search-cancel-button,input[type=search]::-webkit-search-decoration{-webkit-appearance:none}fieldset{border:1px solid silver;margin:0 2px;padding:.35em .625em .75em}legend{padding:0}@font-face{font-family:jaapokki-regular;src:url(../fonts/jaapokki-regular.eot);src:url(../fonts/jaapokki-regular.eot?#iefix) format("embedded-opentype"),url(../fonts/jaapokki-regular.woff) format("woff"),url(../fonts/jaapokki-regular.ttf) format("truetype"),url(../fonts/jaapokki-regular.svg#jaapokki-regular) format("svg");font-weight:400;font-style:normal}header{width:36%}.event-info__tagline{color:#263D8E;font-size:16px;margin-bottom:20px;margin-top:40px}.event-info__last-year{color:#263D8E;text-transform:none;margin-top:20px;display:block;line-height:1.4}.btn,body{text-transform:uppercase}.icon-arrow{width:14px;margin-left:6px}.icon-squiggle{max-width:260px}.event-info__logo{margin:105px 0 0;position:relative;z-index:30;font-size:70px;line-height:1;color:#5AB78F}.event-info__logo img{width:550px}.event-info__year{display:block}.news-signup__form{width:640px;margin-top:90px;margin-bottom:60px;position:relative;z-index:30}.news-signup__field-group{float:left;width:calc(100% - 254px);padding-right:10px}.news-signup__field-group label{display:none}.news-signup-form__email{border:3px solid #263D8E;color:#5B5C5C;line-height:44px;height:44px;width:100%;padding:0 10px}.news-signup-form__submit{height:44px;width:254px}.btn{background-color:#263D8E;border:none;padding:10px 0;color:#FFF}.btn:focus,.btn:hover{box-shadow:2px 2px 0 #FFA397;-webkit-transform:translate(2px,2px);transform:translate(2px,2px)}.sign-up__message{color:#263D8E;margin-top:10px}.sign-up__message--success{color:#5AB78F}footer{width:9%;min-height:100vh;background-color:#FFA397}.twitter-link{background:url(../images/twitter-white.svg) center no-repeat;background-size:24px 20px;display:inline-block;width:24px;height:20px;margin-top:45px}*{box-sizing:border-box}body{font-family:jaapokki-regular,sans-serif;font-size:16px}h1,h2,h3{font-weight:400}.holding-page-container{display:-webkit-flex;display:-ms-flexbox;display:flex;max-width:1240px;margin:0 auto}.hero-image{width:55%;background:url(../images/hero-image.jpg) center no-repeat;background-size:cover;position:relative}.hero-image:after,.hero-image:before{content:'';position:absolute;z-index:20;height:100%;top:0}.hero-image:before{left:0;width:63%;background-color:rgba(90,183,143,.4)}.hero-image:after{left:63%;width:37%;background-color:rgba(38,61,142,.4)}.hero-image__stamp{width:204px;position:absolute;right:-60px;top:380px;z-index:30}@media screen and (max-width:1280px){body{padding:0 20px}}@media screen and (max-width:940px){body{padding:0}.holding-page-container{-webkit-flex-direction:column;-ms-flex-direction:column;flex-direction:column}header{margin-left:45px;margin-right:0;width:300px}.hero-image{height:300px;width:100%;margin-top:65px}.hero-image__stamp{top:40px;right:30px}footer{background-color:transparent;position:absolute;top:0;right:0}.twitter-link{background-image:url(../images/twitter-blue.svg);right:20px}}@media screen and (max-width:770px){header{margin:0 20px;width:auto}.event-info__logo{font-size:60px;margin-top:60px}.event-info__logo img{width:auto;max-width:550px}.news-signup__form{width:auto;margin-bottom:0;margin-top:60px}.news-signup-form__submit,.news-signup__field-group{padding:0;width:100%}.news-signup__field-group{margin-bottom:10px}.sign-up__message{text-align:center}}
/*# sourceMappingURL=data:application/json;base64, */
